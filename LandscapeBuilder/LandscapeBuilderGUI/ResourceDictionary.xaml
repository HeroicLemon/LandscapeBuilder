<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:LandscapeBuilderGUI"
                    xmlns:converters="clr-namespace:LandscapeBuilderGUI.Converters"                    
                    xmlns:lib="clr-namespace:LandscapeBuilderLib;assembly=LandscapeBuilderLib"                    
                    xmlns:System="clr-namespace:System;assembly=mscorlib"                    
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit">

    <System:Boolean x:Key="False">False</System:Boolean>
    <System:Boolean x:Key="True">True</System:Boolean>

    <!--#region Lib Enums-->
    <ObjectDataProvider x:Key="ForestTypeEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="lib:ForestType"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="ThermalColorEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="lib:ThermalColor"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <!--#endregion-->
    
    <!--#region Converters-->
    <converters:DrawingColorToWindowsMediaColor x:Key="DrawingColorToWindowsMediaColor"/>
    <converters:DrawingColorToThermalColor x:Key="DrawingColorToThermalColor"/>
    <converters:LandDataToVisibilityConverter x:Key="LandDataToVisibilityConverter"/>
    <!--#endregion-->
    
    <!--#region Styles-->
    <Style TargetType="xctk:ColorPicker" x:Key="ColorPickerStyle">
        <Setter Property="ColorMode" Value="ColorCanvas"/>
        <Setter Property="ShowTabHeaders" Value="False"/>
        <Setter Property="ShowDropDownButton" Value="False"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Margin" Value="5"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style TargetType="TextBox" x:Key="DirectoryTextBoxStyle" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="Button">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="3"/>
    </Style>

    <Style TargetType="Button" x:Key="ChangeDirectoryButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Content" Value="Change"/>
    </Style>

    <Style TargetType="Button" x:Key="DeleteTextureButton" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Content" Value="Delete"/>
    </Style>

    <Style TargetType="Button" x:Key="ChangeTextureButton">

    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="ListView" x:Key="TexturesListView">
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
    </Style>

    <Style TargetType="ListViewItem" x:Key="TextureListViewItem">
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
    </Style>

    <Style TargetType="xctk:IntegerUpDown" x:Key="LandscapeUpDown">
        <Setter Property="Minimum" Value="0"/>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="Margin" Value="5"/>
    </Style>
    <!--#endregion-->

</ResourceDictionary>