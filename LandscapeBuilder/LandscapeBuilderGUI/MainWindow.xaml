<Window x:Class="LandscapeBuilderGUI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LandscapeBuilderGUI"
        xmlns:converters="clr-namespace:LandscapeBuilderGUI.Converters"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        mc:Ignorable="d"
        Title="Landscape Builder" Height="800" Width="750" MinHeight="480" MinWidth="750">
    <Window.Resources>
        <ResourceDictionary Source="/ResourceDictionary.xaml"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="200"/>
        </Grid.RowDefinitions>
        <TabControl Grid.Row="0">
            <TabItem Header="Textures">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition Height="35"/>
                    </Grid.RowDefinitions>
                    <ListView Grid.Row="0" ItemsSource="{Binding Path=Textures}" x:Name="TextureList" Style="{StaticResource TexturesListView}" ItemContainerStyle="{StaticResource TextureListViewItem}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Map Color">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <xctk:ColorPicker SelectedColor="{Binding Key, Mode=OneWay, Converter={StaticResource DrawingColorToWindowsMediaColor}}" SelectedColorChanged="MapColorPicker_SelectedColorChanged" Style="{StaticResource ColorPickerStyle}" x:Name="mapColorPicker" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Description" Width="125">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBox Text="{Binding Value.Description}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Texture/Color">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <Button Command="{Binding ElementName=TextureList, Path=DataContext.ChooseTextureCommand}" CommandParameter="{Binding Key}" Visibility="{Binding Value, Converter={StaticResource LandDataToVisibilityConverter}, ConverterParameter=TexturedLandData}" Style="{StaticResource ChangeTextureButton}">
                                                    <Button.ToolTip>
                                                        <ToolTip>
                                                            <TextBlock Text="{Binding Value.Path}"/>
                                                        </ToolTip>
                                                    </Button.ToolTip>
                                                    <Image Width="128" Height="128" Margin="10" Source="{Binding Value.Path}"/>
                                                </Button>
                                                <xctk:ColorPicker SelectedColor="{Binding Value.Color, Converter={StaticResource DrawingColorToWindowsMediaColor}}" Visibility="{Binding Value, Converter={StaticResource LandDataToVisibilityConverter}, ConverterParameter=ColoredLandData}" Style="{StaticResource ColorPickerStyle}" x:Name="textureColorPicker"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Default">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <RadioButton GroupName="DefaultGroup" IsChecked="{Binding Value.IsDefault}" Command="{Binding ElementName=TextureList, Path=DataContext.ChangeDefaultCommand}" CommandParameter="{Binding Key}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Water">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Value.IsWater}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Forest Type" Width="110">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding Source={StaticResource ForestTypeEnum}}" SelectedItem="{Binding Value.ForestType}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Thermal Strength">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <ComboBox ItemsSource="{Binding Source={StaticResource ThermalColorEnum}}" SelectedItem="{Binding Value.ThermalColor, Converter={StaticResource DrawingColorToThermalColor}}"/>
                                            <!--<xctk:ColorPicker Width="30" x:Name="thermalColorPicker" SelectedColor="{Binding Value.ThermalColor, Converter={StaticResource DrawingColorToWindowsMediaColor}}" ColorMode="ColorCanvas" ShowTabHeaders="False" ShowDropDownButton="False"/>-->
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Style="{StaticResource DeleteTextureButton}" Command="{Binding ElementName=TextureList, Path=DataContext.DeleteTextureCommand}" CommandParameter="{Binding Key}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <StackPanel Grid.Row="1" Orientation="Horizontal">
                        <Button Command="{Binding AddTextureCommand}" CommandParameter="{StaticResource True}">Add Texture</Button>
                        <Button Command="{Binding AddTextureCommand}" CommandParameter="{StaticResource False}">Add Color</Button>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Airports">
                <ListView ItemsSource="{Binding Path=Airports}" x:Name="AirportList">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="Airport Name" DisplayMemberBinding="{Binding Path=Name}" Width="200"/>
                            <GridViewColumn Header="Include in .apt">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=IncludeInAPT}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Generate Objects">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=ShouldGenerateObjects}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Flatten Terrain">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <CheckBox IsChecked="{Binding Path=Flatten}"/>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Latitude" DisplayMemberBinding="{Binding Path=Latitude}"/>
                            <GridViewColumn Header="Longitude" DisplayMemberBinding="{Binding Path=Longitude}"/>
                            <GridViewColumn Header="Altitude" DisplayMemberBinding="{Binding Path=Altitude}"/>
                            <GridViewColumn Header="Direction" DisplayMemberBinding="{Binding Path=Direction}"/>
                            <GridViewColumn Header="Length" DisplayMemberBinding="{Binding Path=Length}"/>
                            <GridViewColumn Header="Width" DisplayMemberBinding="{Binding Path=Width}"/>
                            <GridViewColumn Header="Frequency" DisplayMemberBinding="{Binding Path=Frequency}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
            </TabItem>
            <TabItem Header="Directories">
                <StackPanel>
                    <TextBlock Text="Input Directory"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Text="{Binding InputDirectory}" Style="{StaticResource DirectoryTextBoxStyle}"/>
                        <Button Grid.Column="1" Style="{StaticResource ChangeDirectoryButton}" Command="{Binding ChooseDirectoryCommand}" CommandParameter="{StaticResource False}"/>
                    </Grid>
                    <TextBlock Text="Output Directory"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBox Grid.Column="0" Text="{Binding OutputDirectory}" Style="{StaticResource DirectoryTextBoxStyle}"/>
                        <Button Grid.Column="1" Style="{StaticResource ChangeDirectoryButton}" Command="{Binding ChooseDirectoryCommand}" CommandParameter="{StaticResource True}"/>
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem Header="QGIS Atlas">
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <Label>Width</Label>
                        <xctk:IntegerUpDown Value="{Binding LandscapeWidth}" Style="{StaticResource LandscapeUpDown}"/>
                        <Label>Height</Label>
                        <xctk:IntegerUpDown Value="{Binding LandscapeHeight}" Style="{StaticResource LandscapeUpDown}"/>
                    </StackPanel>
                    <TextBox Text="{Binding QGISString}" IsReadOnly="True"/>
                    <TextBlock>This page will generate the array needed to properly name the tiles created by the QGIS Atlas feature.</TextBlock>
                </StackPanel>
            </TabItem>
        </TabControl>
        <StackPanel Grid.Row="1">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Command="{Binding SaveCommand}">Save</Button>
                <Button Command="{Binding RunCommand}">Start</Button>
            </StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Row="1" Grid.Column="0" IsChecked="{Binding GenDDS}">Generate DDS</CheckBox>
                <CheckBox Grid.Row="1" Grid.Column="1" IsChecked="{Binding GenForestFiles}">Generate Forest Files</CheckBox>
                <CheckBox Grid.Row="0" Grid.Column="1" IsChecked="{Binding GenThermalFile}">Generate Thermal File</CheckBox>
                <CheckBox Grid.Row="0" Grid.Column="2" IsChecked="{Binding OutputToCondor}">Output To Condor</CheckBox>
                <Grid Grid.Row="0" Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0">Landscape Name</Label>
                    <ComboBox Grid.Column="1" ItemsSource="{Binding LandscapeNames}" SelectedItem="{Binding LandscapeName}" IsEditable="True"/>
                </Grid>
                <Grid Grid.Row="1" Grid.Column="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <CheckBox Grid.Column="0" Content="Generate single tile" IsChecked="{Binding GenerateSingleTile}" IsEnabled="{Binding InputTilesPresent}"/>
                    <ComboBox Grid.Column="1" ItemsSource="{Binding TileNames}" SelectedItem="{Binding SingleTileName}" IsEnabled="{Binding GenerateSingleTile}"/>
                </Grid>
            </Grid>
            <TextBox Text="{Binding ProgressText}" Height="85" IsReadOnly="True" VerticalScrollBarVisibility="Visible"/>
        </StackPanel>
    </Grid>
</Window>
